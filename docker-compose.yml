version: "3"
services:
  db:
    image: postgres
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - data:/var/lib/postgresql/data
    networks:
      - model-api
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
  server:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      FLASK_ENV: 'development'
      FLASK_APP: 'app.py'
      SECRET_KEY: ${SECRET_KEY}
      MLFLOW_TRACKING_URI: 'postgresql+psycopg2://postgres@db:5432/postgres'
      MLFLOW_S3_ENDPOINT_URL: 'http://minio:9000'
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: miniopassword
    volumes:
      - .:/usr/src/app
    links:
      - db
      - minio
    depends_on:
      - db
      - minio
    ports:
      - "5000:5000"
    expose:
      - "5000"
    networks:
      - model-api
  minio:
    image: minio/minio:latest
    hostname: minio
    environment: 
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniopassword
    expose:
      - "9000"
      - "9001"
    volumes:
      - minio-data:/data
    command: server --console-address ":9001" /data/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - model-api
  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio
    networks: 
      - model-api

volumes:
  data:
    driver: local
  minio-data:
    driver: local
networks:
  model-api:
    external:
      name: model-api